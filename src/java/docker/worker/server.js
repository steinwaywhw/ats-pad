// Generated by CoffeeScript 1.7.1
(function() {
  var server;

  server = {
    term: null,
    buff: [],
    primus: null,
    "default": function(opts) {
      var _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;
      return {
        cols: (_ref = opts != null ? opts.cols : void 0) != null ? _ref : 140,
        rows: (_ref1 = opts != null ? opts.rows : void 0) != null ? _ref1 : 19,
        cwd: (_ref2 = opts != null ? opts.cwd : void 0) != null ? _ref2 : '/root/atspad',
        pathname: (_ref3 = opts != null ? opts.pathname : void 0) != null ? _ref3 : "/console",
        transformer: (_ref4 = opts != null ? opts.transformer : void 0) != null ? _ref4 : "engine.io",
        timeout: (_ref5 = opts != null ? opts.timeout : void 0) != null ? _ref5 : false,
        port: (_ref6 = opts != null ? opts.port : void 0) != null ? _ref6 : 8023
      };
    },
    upTerm: function(opts) {
      var term_opts, _ref;
      opts = this["default"](opts);
      term_opts = {
        name: (_ref = require('fs').existsSync('/usr/share/terminfo/x/xterm-256color')) != null ? _ref : {
          'xterm-256color': 'xterm'
        },
        cols: opts.cols,
        rows: opts.rows,
        cwd: opts.cwd
      };
      return this.term = require('pty.js').fork('bash', ['--rcfile', '/root/.bashrc'], term_opts);
    },
    upServer: function(opts) {
      opts = this["default"](opts);
      this.primus = require('primus').createServer({
        pathname: opts.pathname,
        transformer: opts.transformer,
        timeout: opts.timeout,
        port: opts.port
      });
      this.primus.save("" + __dirname + "/primus.js");
      this.term.on("data", (function(_this) {
        return function(data) {
          if (_this.primus.connected === 0) {
            return _this.buff.push(data);
          } else {
            return _this.primus.write(data);
          }
        };
      })(this));
      return this.primus.on("connection", (function(_this) {
        return function(spark) {
          while (_this.buff.length) {
            _this.primus.write(_this.buff.shift());
          }
          return spark.on('data', function(data) {
            return _this.term.write(data);
          });
        };
      })(this));
    },
    up: function(opts) {
      opts = this["default"](opts);
      this.upTerm(opts);
      return this.upServer(opts);
    }
  };

  module.exports = server;

}).call(this);
