{
	"name": "ATS",
	"scopeName": "source.ats",
	"fileTypes": ["dats", "sats", "hats"],
	"uuid": "c3b7ee53-6117-4cdf-80ea-d0572e54aed7",
	"repository": {
		"keywords": {
			"name": "keyword.ats",
			"match": "(\\#|\\$)(\\w+)|\\b(absprop|abst@ype|abstype|absviewt@ype|absviewtype|absview|and|andalso|assume|as|begin|break|case(\\+|-)?|class|continue|dataprop|datasort|datatype|dataviewtype|dataview|dynload|dyn|else|end|exception|extern|fix|fn|for|fun|if|implement|infixl|infixr|infix|in|lam|let|llam|local|macdef|macrodef|method|modprop|modtype|module|nonfix|object|of|op|or|orelse|overload|par|postfix|praxi|prefix|prfn|prfun|propdef|prval|rec|sif|sortdef|stadef|staif|staload|stavar|sta|struct|symelim|symintr|then|try|typedef|union|val(\\+|-)?|var|viewdef|viewtypedef|when|where|while|withprop|withtype|withviewtype|withview|with)\\b"
		},
		"string": {
			"name": "string.ats",
			"match": "\"[^\"]*\""
		},
		"comment_block": {
			"name": "comment.block.ats",
			"applyEndPatternLast": 1,
			"begin": "\\(\\*",
			"end": "\\*\\)",
			"patterns": [
				{"include": "#comment_block"}
			]
		},
		"comment_line": {
			"name": "comment.line.ats",
			"match": "//.*$"
		},
		"comment_rest": {
			"name": "comment.rest.ats",
			"applyEndPatternLast": 1,
			"begin": "////",
			"end": ".\\z",
			"patterns": [
				{
					"match": ".*"
				}
			]
		},
		"quantifier_square": {
			"begin": "(\\[)",
			"end": "(\\])",
			"name": "variable.parameter.ats"
		},
		"quantifier_curly": {
			"begin": "({)",
			"end": "(})",
			"name": "variable.parameter.ats"
		},
		"quantifier_arrow": {
			"begin": "(?<!\\s)<",
			"end": ">",
			"name": "variable.parameter.ats"
		},
		"operators": {
			"name": "keyword.operator.ats",
			"match": "!=|!|%|&&|&|\\*|\\+|-|-->|->|/|:=|<=|(?<=\\s)<|==>|=>|=|>=|>>|>|\\?|\\|\\||\\||~"
		},
		"where": {
			"applyEndPatternLast": 1,
			"begin": "(?<=where)(?:\\s*){",
			"end": "}",
			"patterns": [{"include": "$self"}]
		}
	},
	"patterns": [
		{"include": "#where"},
		{"include": "#comment_rest"},
		{"include": "#comment_line"},
		{"include": "#comment_block"},
		{"include": "#string"},
		{"include": "#quantifier_square"},
		{"include": "#quantifier_curly"},
		{"include": "#operators"},
		{"include": "#quantifier_arrow"},
		{"include": "#keywords"}
	]
}


